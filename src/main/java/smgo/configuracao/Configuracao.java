// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: configuracao.proto

package smgo.configuracao;

public final class Configuracao {
  private Configuracao() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ConfiguracaoComunicacaoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:smgo.configuracao.ConfiguracaoComunicacao)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * endereco ip do broker de MQTT a ser usado como ponto de comunicacao primario
     * </pre>
     *
     * <code>string brokerPrimario = 1;</code>
     * @return The brokerPrimario.
     */
    java.lang.String getBrokerPrimario();
    /**
     * <pre>
     * endereco ip do broker de MQTT a ser usado como ponto de comunicacao primario
     * </pre>
     *
     * <code>string brokerPrimario = 1;</code>
     * @return The bytes for brokerPrimario.
     */
    com.google.protobuf.ByteString
        getBrokerPrimarioBytes();

    /**
     * <pre>
     * porta do broker primario que fala via TCP
     * </pre>
     *
     * <code>uint32 portaBrokerPrimario = 2;</code>
     * @return The portaBrokerPrimario.
     */
    int getPortaBrokerPrimario();

    /**
     * <pre>
     * endereco ip do broker de MQTT a ser usado como ponto de comunicacao secundario - caso o primario se encontre offline
     * </pre>
     *
     * <code>string brokerSecundario = 3;</code>
     * @return The brokerSecundario.
     */
    java.lang.String getBrokerSecundario();
    /**
     * <pre>
     * endereco ip do broker de MQTT a ser usado como ponto de comunicacao secundario - caso o primario se encontre offline
     * </pre>
     *
     * <code>string brokerSecundario = 3;</code>
     * @return The bytes for brokerSecundario.
     */
    com.google.protobuf.ByteString
        getBrokerSecundarioBytes();

    /**
     * <pre>
     * porta do broker de MQTT secundario
     * </pre>
     *
     * <code>uint32 portaBrokerSecundario = 4;</code>
     * @return The portaBrokerSecundario.
     */
    int getPortaBrokerSecundario();

    /**
     * <pre>
     * se true, tenta usar SSL / TLS para comunicacao
     * </pre>
     *
     * <code>bool conexaoSegura = 5;</code>
     * @return The conexaoSegura.
     */
    boolean getConexaoSegura();

    /**
     * <pre>
     * enredeco IP do modem principal da UCP
     * </pre>
     *
     * <code>string ipModem = 6;</code>
     * @return The ipModem.
     */
    java.lang.String getIpModem();
    /**
     * <pre>
     * enredeco IP do modem principal da UCP
     * </pre>
     *
     * <code>string ipModem = 6;</code>
     * @return The bytes for ipModem.
     */
    com.google.protobuf.ByteString
        getIpModemBytes();

    /**
     * <pre>
     * endereco IP do dispositivo de WiFi
     * </pre>
     *
     * <code>string ipWifi = 7;</code>
     * @return The ipWifi.
     */
    java.lang.String getIpWifi();
    /**
     * <pre>
     * endereco IP do dispositivo de WiFi
     * </pre>
     *
     * <code>string ipWifi = 7;</code>
     * @return The bytes for ipWifi.
     */
    com.google.protobuf.ByteString
        getIpWifiBytes();
  }
  /**
   * <pre>
   * mensagem que descreve os parametros de configuracao de comunicacao
   * </pre>
   *
   * Protobuf type {@code smgo.configuracao.ConfiguracaoComunicacao}
   */
  public static final class ConfiguracaoComunicacao extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:smgo.configuracao.ConfiguracaoComunicacao)
      ConfiguracaoComunicacaoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConfiguracaoComunicacao.newBuilder() to construct.
    private ConfiguracaoComunicacao(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConfiguracaoComunicacao() {
      brokerPrimario_ = "";
      brokerSecundario_ = "";
      ipModem_ = "";
      ipWifi_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ConfiguracaoComunicacao();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConfiguracaoComunicacao(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              brokerPrimario_ = s;
              break;
            }
            case 16: {

              portaBrokerPrimario_ = input.readUInt32();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              brokerSecundario_ = s;
              break;
            }
            case 32: {

              portaBrokerSecundario_ = input.readUInt32();
              break;
            }
            case 40: {

              conexaoSegura_ = input.readBool();
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              ipModem_ = s;
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              ipWifi_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return smgo.configuracao.Configuracao.internal_static_smgo_configuracao_ConfiguracaoComunicacao_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return smgo.configuracao.Configuracao.internal_static_smgo_configuracao_ConfiguracaoComunicacao_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              smgo.configuracao.Configuracao.ConfiguracaoComunicacao.class, smgo.configuracao.Configuracao.ConfiguracaoComunicacao.Builder.class);
    }

    public static final int BROKERPRIMARIO_FIELD_NUMBER = 1;
    private volatile java.lang.Object brokerPrimario_;
    /**
     * <pre>
     * endereco ip do broker de MQTT a ser usado como ponto de comunicacao primario
     * </pre>
     *
     * <code>string brokerPrimario = 1;</code>
     * @return The brokerPrimario.
     */
    @java.lang.Override
    public java.lang.String getBrokerPrimario() {
      java.lang.Object ref = brokerPrimario_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        brokerPrimario_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * endereco ip do broker de MQTT a ser usado como ponto de comunicacao primario
     * </pre>
     *
     * <code>string brokerPrimario = 1;</code>
     * @return The bytes for brokerPrimario.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBrokerPrimarioBytes() {
      java.lang.Object ref = brokerPrimario_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        brokerPrimario_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORTABROKERPRIMARIO_FIELD_NUMBER = 2;
    private int portaBrokerPrimario_;
    /**
     * <pre>
     * porta do broker primario que fala via TCP
     * </pre>
     *
     * <code>uint32 portaBrokerPrimario = 2;</code>
     * @return The portaBrokerPrimario.
     */
    @java.lang.Override
    public int getPortaBrokerPrimario() {
      return portaBrokerPrimario_;
    }

    public static final int BROKERSECUNDARIO_FIELD_NUMBER = 3;
    private volatile java.lang.Object brokerSecundario_;
    /**
     * <pre>
     * endereco ip do broker de MQTT a ser usado como ponto de comunicacao secundario - caso o primario se encontre offline
     * </pre>
     *
     * <code>string brokerSecundario = 3;</code>
     * @return The brokerSecundario.
     */
    @java.lang.Override
    public java.lang.String getBrokerSecundario() {
      java.lang.Object ref = brokerSecundario_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        brokerSecundario_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * endereco ip do broker de MQTT a ser usado como ponto de comunicacao secundario - caso o primario se encontre offline
     * </pre>
     *
     * <code>string brokerSecundario = 3;</code>
     * @return The bytes for brokerSecundario.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBrokerSecundarioBytes() {
      java.lang.Object ref = brokerSecundario_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        brokerSecundario_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORTABROKERSECUNDARIO_FIELD_NUMBER = 4;
    private int portaBrokerSecundario_;
    /**
     * <pre>
     * porta do broker de MQTT secundario
     * </pre>
     *
     * <code>uint32 portaBrokerSecundario = 4;</code>
     * @return The portaBrokerSecundario.
     */
    @java.lang.Override
    public int getPortaBrokerSecundario() {
      return portaBrokerSecundario_;
    }

    public static final int CONEXAOSEGURA_FIELD_NUMBER = 5;
    private boolean conexaoSegura_;
    /**
     * <pre>
     * se true, tenta usar SSL / TLS para comunicacao
     * </pre>
     *
     * <code>bool conexaoSegura = 5;</code>
     * @return The conexaoSegura.
     */
    @java.lang.Override
    public boolean getConexaoSegura() {
      return conexaoSegura_;
    }

    public static final int IPMODEM_FIELD_NUMBER = 6;
    private volatile java.lang.Object ipModem_;
    /**
     * <pre>
     * enredeco IP do modem principal da UCP
     * </pre>
     *
     * <code>string ipModem = 6;</code>
     * @return The ipModem.
     */
    @java.lang.Override
    public java.lang.String getIpModem() {
      java.lang.Object ref = ipModem_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ipModem_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * enredeco IP do modem principal da UCP
     * </pre>
     *
     * <code>string ipModem = 6;</code>
     * @return The bytes for ipModem.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIpModemBytes() {
      java.lang.Object ref = ipModem_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ipModem_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IPWIFI_FIELD_NUMBER = 7;
    private volatile java.lang.Object ipWifi_;
    /**
     * <pre>
     * endereco IP do dispositivo de WiFi
     * </pre>
     *
     * <code>string ipWifi = 7;</code>
     * @return The ipWifi.
     */
    @java.lang.Override
    public java.lang.String getIpWifi() {
      java.lang.Object ref = ipWifi_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ipWifi_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * endereco IP do dispositivo de WiFi
     * </pre>
     *
     * <code>string ipWifi = 7;</code>
     * @return The bytes for ipWifi.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIpWifiBytes() {
      java.lang.Object ref = ipWifi_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ipWifi_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(brokerPrimario_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, brokerPrimario_);
      }
      if (portaBrokerPrimario_ != 0) {
        output.writeUInt32(2, portaBrokerPrimario_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(brokerSecundario_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, brokerSecundario_);
      }
      if (portaBrokerSecundario_ != 0) {
        output.writeUInt32(4, portaBrokerSecundario_);
      }
      if (conexaoSegura_ != false) {
        output.writeBool(5, conexaoSegura_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(ipModem_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, ipModem_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(ipWifi_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, ipWifi_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(brokerPrimario_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, brokerPrimario_);
      }
      if (portaBrokerPrimario_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, portaBrokerPrimario_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(brokerSecundario_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, brokerSecundario_);
      }
      if (portaBrokerSecundario_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, portaBrokerSecundario_);
      }
      if (conexaoSegura_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, conexaoSegura_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(ipModem_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, ipModem_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(ipWifi_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, ipWifi_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof smgo.configuracao.Configuracao.ConfiguracaoComunicacao)) {
        return super.equals(obj);
      }
      smgo.configuracao.Configuracao.ConfiguracaoComunicacao other = (smgo.configuracao.Configuracao.ConfiguracaoComunicacao) obj;

      if (!getBrokerPrimario()
          .equals(other.getBrokerPrimario())) return false;
      if (getPortaBrokerPrimario()
          != other.getPortaBrokerPrimario()) return false;
      if (!getBrokerSecundario()
          .equals(other.getBrokerSecundario())) return false;
      if (getPortaBrokerSecundario()
          != other.getPortaBrokerSecundario()) return false;
      if (getConexaoSegura()
          != other.getConexaoSegura()) return false;
      if (!getIpModem()
          .equals(other.getIpModem())) return false;
      if (!getIpWifi()
          .equals(other.getIpWifi())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BROKERPRIMARIO_FIELD_NUMBER;
      hash = (53 * hash) + getBrokerPrimario().hashCode();
      hash = (37 * hash) + PORTABROKERPRIMARIO_FIELD_NUMBER;
      hash = (53 * hash) + getPortaBrokerPrimario();
      hash = (37 * hash) + BROKERSECUNDARIO_FIELD_NUMBER;
      hash = (53 * hash) + getBrokerSecundario().hashCode();
      hash = (37 * hash) + PORTABROKERSECUNDARIO_FIELD_NUMBER;
      hash = (53 * hash) + getPortaBrokerSecundario();
      hash = (37 * hash) + CONEXAOSEGURA_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getConexaoSegura());
      hash = (37 * hash) + IPMODEM_FIELD_NUMBER;
      hash = (53 * hash) + getIpModem().hashCode();
      hash = (37 * hash) + IPWIFI_FIELD_NUMBER;
      hash = (53 * hash) + getIpWifi().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static smgo.configuracao.Configuracao.ConfiguracaoComunicacao parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static smgo.configuracao.Configuracao.ConfiguracaoComunicacao parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static smgo.configuracao.Configuracao.ConfiguracaoComunicacao parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static smgo.configuracao.Configuracao.ConfiguracaoComunicacao parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static smgo.configuracao.Configuracao.ConfiguracaoComunicacao parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static smgo.configuracao.Configuracao.ConfiguracaoComunicacao parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static smgo.configuracao.Configuracao.ConfiguracaoComunicacao parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static smgo.configuracao.Configuracao.ConfiguracaoComunicacao parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static smgo.configuracao.Configuracao.ConfiguracaoComunicacao parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static smgo.configuracao.Configuracao.ConfiguracaoComunicacao parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static smgo.configuracao.Configuracao.ConfiguracaoComunicacao parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static smgo.configuracao.Configuracao.ConfiguracaoComunicacao parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(smgo.configuracao.Configuracao.ConfiguracaoComunicacao prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * mensagem que descreve os parametros de configuracao de comunicacao
     * </pre>
     *
     * Protobuf type {@code smgo.configuracao.ConfiguracaoComunicacao}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:smgo.configuracao.ConfiguracaoComunicacao)
        smgo.configuracao.Configuracao.ConfiguracaoComunicacaoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return smgo.configuracao.Configuracao.internal_static_smgo_configuracao_ConfiguracaoComunicacao_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return smgo.configuracao.Configuracao.internal_static_smgo_configuracao_ConfiguracaoComunicacao_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                smgo.configuracao.Configuracao.ConfiguracaoComunicacao.class, smgo.configuracao.Configuracao.ConfiguracaoComunicacao.Builder.class);
      }

      // Construct using smgo.configuracao.Configuracao.ConfiguracaoComunicacao.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        brokerPrimario_ = "";

        portaBrokerPrimario_ = 0;

        brokerSecundario_ = "";

        portaBrokerSecundario_ = 0;

        conexaoSegura_ = false;

        ipModem_ = "";

        ipWifi_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return smgo.configuracao.Configuracao.internal_static_smgo_configuracao_ConfiguracaoComunicacao_descriptor;
      }

      @java.lang.Override
      public smgo.configuracao.Configuracao.ConfiguracaoComunicacao getDefaultInstanceForType() {
        return smgo.configuracao.Configuracao.ConfiguracaoComunicacao.getDefaultInstance();
      }

      @java.lang.Override
      public smgo.configuracao.Configuracao.ConfiguracaoComunicacao build() {
        smgo.configuracao.Configuracao.ConfiguracaoComunicacao result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public smgo.configuracao.Configuracao.ConfiguracaoComunicacao buildPartial() {
        smgo.configuracao.Configuracao.ConfiguracaoComunicacao result = new smgo.configuracao.Configuracao.ConfiguracaoComunicacao(this);
        result.brokerPrimario_ = brokerPrimario_;
        result.portaBrokerPrimario_ = portaBrokerPrimario_;
        result.brokerSecundario_ = brokerSecundario_;
        result.portaBrokerSecundario_ = portaBrokerSecundario_;
        result.conexaoSegura_ = conexaoSegura_;
        result.ipModem_ = ipModem_;
        result.ipWifi_ = ipWifi_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof smgo.configuracao.Configuracao.ConfiguracaoComunicacao) {
          return mergeFrom((smgo.configuracao.Configuracao.ConfiguracaoComunicacao)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(smgo.configuracao.Configuracao.ConfiguracaoComunicacao other) {
        if (other == smgo.configuracao.Configuracao.ConfiguracaoComunicacao.getDefaultInstance()) return this;
        if (!other.getBrokerPrimario().isEmpty()) {
          brokerPrimario_ = other.brokerPrimario_;
          onChanged();
        }
        if (other.getPortaBrokerPrimario() != 0) {
          setPortaBrokerPrimario(other.getPortaBrokerPrimario());
        }
        if (!other.getBrokerSecundario().isEmpty()) {
          brokerSecundario_ = other.brokerSecundario_;
          onChanged();
        }
        if (other.getPortaBrokerSecundario() != 0) {
          setPortaBrokerSecundario(other.getPortaBrokerSecundario());
        }
        if (other.getConexaoSegura() != false) {
          setConexaoSegura(other.getConexaoSegura());
        }
        if (!other.getIpModem().isEmpty()) {
          ipModem_ = other.ipModem_;
          onChanged();
        }
        if (!other.getIpWifi().isEmpty()) {
          ipWifi_ = other.ipWifi_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        smgo.configuracao.Configuracao.ConfiguracaoComunicacao parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (smgo.configuracao.Configuracao.ConfiguracaoComunicacao) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object brokerPrimario_ = "";
      /**
       * <pre>
       * endereco ip do broker de MQTT a ser usado como ponto de comunicacao primario
       * </pre>
       *
       * <code>string brokerPrimario = 1;</code>
       * @return The brokerPrimario.
       */
      public java.lang.String getBrokerPrimario() {
        java.lang.Object ref = brokerPrimario_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          brokerPrimario_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * endereco ip do broker de MQTT a ser usado como ponto de comunicacao primario
       * </pre>
       *
       * <code>string brokerPrimario = 1;</code>
       * @return The bytes for brokerPrimario.
       */
      public com.google.protobuf.ByteString
          getBrokerPrimarioBytes() {
        java.lang.Object ref = brokerPrimario_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          brokerPrimario_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * endereco ip do broker de MQTT a ser usado como ponto de comunicacao primario
       * </pre>
       *
       * <code>string brokerPrimario = 1;</code>
       * @param value The brokerPrimario to set.
       * @return This builder for chaining.
       */
      public Builder setBrokerPrimario(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        brokerPrimario_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * endereco ip do broker de MQTT a ser usado como ponto de comunicacao primario
       * </pre>
       *
       * <code>string brokerPrimario = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearBrokerPrimario() {
        
        brokerPrimario_ = getDefaultInstance().getBrokerPrimario();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * endereco ip do broker de MQTT a ser usado como ponto de comunicacao primario
       * </pre>
       *
       * <code>string brokerPrimario = 1;</code>
       * @param value The bytes for brokerPrimario to set.
       * @return This builder for chaining.
       */
      public Builder setBrokerPrimarioBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        brokerPrimario_ = value;
        onChanged();
        return this;
      }

      private int portaBrokerPrimario_ ;
      /**
       * <pre>
       * porta do broker primario que fala via TCP
       * </pre>
       *
       * <code>uint32 portaBrokerPrimario = 2;</code>
       * @return The portaBrokerPrimario.
       */
      @java.lang.Override
      public int getPortaBrokerPrimario() {
        return portaBrokerPrimario_;
      }
      /**
       * <pre>
       * porta do broker primario que fala via TCP
       * </pre>
       *
       * <code>uint32 portaBrokerPrimario = 2;</code>
       * @param value The portaBrokerPrimario to set.
       * @return This builder for chaining.
       */
      public Builder setPortaBrokerPrimario(int value) {
        
        portaBrokerPrimario_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * porta do broker primario que fala via TCP
       * </pre>
       *
       * <code>uint32 portaBrokerPrimario = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPortaBrokerPrimario() {
        
        portaBrokerPrimario_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object brokerSecundario_ = "";
      /**
       * <pre>
       * endereco ip do broker de MQTT a ser usado como ponto de comunicacao secundario - caso o primario se encontre offline
       * </pre>
       *
       * <code>string brokerSecundario = 3;</code>
       * @return The brokerSecundario.
       */
      public java.lang.String getBrokerSecundario() {
        java.lang.Object ref = brokerSecundario_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          brokerSecundario_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * endereco ip do broker de MQTT a ser usado como ponto de comunicacao secundario - caso o primario se encontre offline
       * </pre>
       *
       * <code>string brokerSecundario = 3;</code>
       * @return The bytes for brokerSecundario.
       */
      public com.google.protobuf.ByteString
          getBrokerSecundarioBytes() {
        java.lang.Object ref = brokerSecundario_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          brokerSecundario_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * endereco ip do broker de MQTT a ser usado como ponto de comunicacao secundario - caso o primario se encontre offline
       * </pre>
       *
       * <code>string brokerSecundario = 3;</code>
       * @param value The brokerSecundario to set.
       * @return This builder for chaining.
       */
      public Builder setBrokerSecundario(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        brokerSecundario_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * endereco ip do broker de MQTT a ser usado como ponto de comunicacao secundario - caso o primario se encontre offline
       * </pre>
       *
       * <code>string brokerSecundario = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBrokerSecundario() {
        
        brokerSecundario_ = getDefaultInstance().getBrokerSecundario();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * endereco ip do broker de MQTT a ser usado como ponto de comunicacao secundario - caso o primario se encontre offline
       * </pre>
       *
       * <code>string brokerSecundario = 3;</code>
       * @param value The bytes for brokerSecundario to set.
       * @return This builder for chaining.
       */
      public Builder setBrokerSecundarioBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        brokerSecundario_ = value;
        onChanged();
        return this;
      }

      private int portaBrokerSecundario_ ;
      /**
       * <pre>
       * porta do broker de MQTT secundario
       * </pre>
       *
       * <code>uint32 portaBrokerSecundario = 4;</code>
       * @return The portaBrokerSecundario.
       */
      @java.lang.Override
      public int getPortaBrokerSecundario() {
        return portaBrokerSecundario_;
      }
      /**
       * <pre>
       * porta do broker de MQTT secundario
       * </pre>
       *
       * <code>uint32 portaBrokerSecundario = 4;</code>
       * @param value The portaBrokerSecundario to set.
       * @return This builder for chaining.
       */
      public Builder setPortaBrokerSecundario(int value) {
        
        portaBrokerSecundario_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * porta do broker de MQTT secundario
       * </pre>
       *
       * <code>uint32 portaBrokerSecundario = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPortaBrokerSecundario() {
        
        portaBrokerSecundario_ = 0;
        onChanged();
        return this;
      }

      private boolean conexaoSegura_ ;
      /**
       * <pre>
       * se true, tenta usar SSL / TLS para comunicacao
       * </pre>
       *
       * <code>bool conexaoSegura = 5;</code>
       * @return The conexaoSegura.
       */
      @java.lang.Override
      public boolean getConexaoSegura() {
        return conexaoSegura_;
      }
      /**
       * <pre>
       * se true, tenta usar SSL / TLS para comunicacao
       * </pre>
       *
       * <code>bool conexaoSegura = 5;</code>
       * @param value The conexaoSegura to set.
       * @return This builder for chaining.
       */
      public Builder setConexaoSegura(boolean value) {
        
        conexaoSegura_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * se true, tenta usar SSL / TLS para comunicacao
       * </pre>
       *
       * <code>bool conexaoSegura = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearConexaoSegura() {
        
        conexaoSegura_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object ipModem_ = "";
      /**
       * <pre>
       * enredeco IP do modem principal da UCP
       * </pre>
       *
       * <code>string ipModem = 6;</code>
       * @return The ipModem.
       */
      public java.lang.String getIpModem() {
        java.lang.Object ref = ipModem_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ipModem_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * enredeco IP do modem principal da UCP
       * </pre>
       *
       * <code>string ipModem = 6;</code>
       * @return The bytes for ipModem.
       */
      public com.google.protobuf.ByteString
          getIpModemBytes() {
        java.lang.Object ref = ipModem_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ipModem_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * enredeco IP do modem principal da UCP
       * </pre>
       *
       * <code>string ipModem = 6;</code>
       * @param value The ipModem to set.
       * @return This builder for chaining.
       */
      public Builder setIpModem(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        ipModem_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * enredeco IP do modem principal da UCP
       * </pre>
       *
       * <code>string ipModem = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearIpModem() {
        
        ipModem_ = getDefaultInstance().getIpModem();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * enredeco IP do modem principal da UCP
       * </pre>
       *
       * <code>string ipModem = 6;</code>
       * @param value The bytes for ipModem to set.
       * @return This builder for chaining.
       */
      public Builder setIpModemBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        ipModem_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object ipWifi_ = "";
      /**
       * <pre>
       * endereco IP do dispositivo de WiFi
       * </pre>
       *
       * <code>string ipWifi = 7;</code>
       * @return The ipWifi.
       */
      public java.lang.String getIpWifi() {
        java.lang.Object ref = ipWifi_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ipWifi_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * endereco IP do dispositivo de WiFi
       * </pre>
       *
       * <code>string ipWifi = 7;</code>
       * @return The bytes for ipWifi.
       */
      public com.google.protobuf.ByteString
          getIpWifiBytes() {
        java.lang.Object ref = ipWifi_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ipWifi_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * endereco IP do dispositivo de WiFi
       * </pre>
       *
       * <code>string ipWifi = 7;</code>
       * @param value The ipWifi to set.
       * @return This builder for chaining.
       */
      public Builder setIpWifi(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        ipWifi_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * endereco IP do dispositivo de WiFi
       * </pre>
       *
       * <code>string ipWifi = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearIpWifi() {
        
        ipWifi_ = getDefaultInstance().getIpWifi();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * endereco IP do dispositivo de WiFi
       * </pre>
       *
       * <code>string ipWifi = 7;</code>
       * @param value The bytes for ipWifi to set.
       * @return This builder for chaining.
       */
      public Builder setIpWifiBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        ipWifi_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:smgo.configuracao.ConfiguracaoComunicacao)
    }

    // @@protoc_insertion_point(class_scope:smgo.configuracao.ConfiguracaoComunicacao)
    private static final smgo.configuracao.Configuracao.ConfiguracaoComunicacao DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new smgo.configuracao.Configuracao.ConfiguracaoComunicacao();
    }

    public static smgo.configuracao.Configuracao.ConfiguracaoComunicacao getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConfiguracaoComunicacao>
        PARSER = new com.google.protobuf.AbstractParser<ConfiguracaoComunicacao>() {
      @java.lang.Override
      public ConfiguracaoComunicacao parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConfiguracaoComunicacao(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConfiguracaoComunicacao> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConfiguracaoComunicacao> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public smgo.configuracao.Configuracao.ConfiguracaoComunicacao getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_smgo_configuracao_ConfiguracaoComunicacao_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_smgo_configuracao_ConfiguracaoComunicacao_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022configuracao.proto\022\021smgo.configuracao\032" +
      "\013comum.proto\032\024posicionamento.proto\"\277\001\n\027C" +
      "onfiguracaoComunicacao\022\026\n\016brokerPrimario" +
      "\030\001 \001(\t\022\033\n\023portaBrokerPrimario\030\002 \001(\r\022\030\n\020b" +
      "rokerSecundario\030\003 \001(\t\022\035\n\025portaBrokerSecu" +
      "ndario\030\004 \001(\r\022\025\n\rconexaoSegura\030\005 \001(\010\022\017\n\007i" +
      "pModem\030\006 \001(\t\022\016\n\006ipWifi\030\007 \001(\tb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          smgo.Comum.getDescriptor(),
          smgo.posicao.PosicionamentoOuterClass.getDescriptor(),
        });
    internal_static_smgo_configuracao_ConfiguracaoComunicacao_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_smgo_configuracao_ConfiguracaoComunicacao_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_smgo_configuracao_ConfiguracaoComunicacao_descriptor,
        new java.lang.String[] { "BrokerPrimario", "PortaBrokerPrimario", "BrokerSecundario", "PortaBrokerSecundario", "ConexaoSegura", "IpModem", "IpWifi", });
    smgo.Comum.getDescriptor();
    smgo.posicao.PosicionamentoOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
